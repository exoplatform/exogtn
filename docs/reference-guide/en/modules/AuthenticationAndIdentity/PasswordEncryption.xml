<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../../Reference_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="sect-Reference_Guide-Password-encryption">
	<title>Password encryption</title>
	<para>
		<note>
		Username and passwords are stored in clear text. The <emphasis role="bold">Remember Me</emphasis> feature of eXo Platform uses a token mechanism to be able to authenticate returning users without requiring an explicit login. 
		However, to be able to authenticate these users, the token needs to store the username and password in clear text in the JCR.
		</note>
	</para>
	<para>
	Administrators have two options available to avoid this risk:
	</para>
	<itemizedlist>
    <listitem>
    <para>The <emphasis role="bold">Remember Me</emphasis> feature can be disabled by removing the corresponding checkbox in: <![CDATA[$TOMCAT_HOME/webapps/portal.war/login/jsp/login.jsp]]> and <![CDATA[$TOMCAT_HOME/webapps/portal.war/groovy/portal/webui/UILoginForm.gtmpl]]></para>.
	</listitem>
	<listitem>
	<para>
	Passwords can be encoded prior to being saved to the JCR. This option requires administrators to provide a custom subclass of <emphasis role="italic">org.exoplatform.web.security.security.AbstractCodec</emphasis> and set up a codec implementation with <emphasis role="italic">CookieTokenService</emphasis>:
	</para>
	</listitem>	
	<para>
	Create a Javaclass similar to:
	</para>
	<programlisting language="java">
	package org.example.codec;

import org.exoplatform.container.xml.InitParams;
import org.exoplatform.web.security.security.AbstractCodec;
import org.exoplatform.web.security.security.CookieTokenService;
import org.picocontainer.Startable;

public class ExampleCodec extends AbstractCodec implements Startable
{
   private String simpleParam;
   private CookieTokenService cookieTokenService;
   
   public ExampleCodec(InitParams params, CookieTokenService cookieTokenService)
   {
      simpleParam = params.getValueParam("encodingParam").getValue();
      this.cookieTokenService = cookieTokenService;
   }
   
   public void start()
   {
      cookieTokenService.setupCodec(this);
   }

   public void stop()
   {      
   }
   
   /**
    * Very simple encoding algorithm used only for demonstration purposes. 
    * You should use stronger algorithm in real production environment. 
    */
   public String encode(String plainInput)
   {
      return plainInput + simpleParam;
   }
   
   public String decode(String encodedInput)
   {
      return encodedInput.substring(0, encodedInput.length() - simpleParam.length());
   }

}

	</programlisting>	
	<listitem>
	<para>
	Compile the class and package it into a jar file. For this example, you will call the jar file named <emphasis role="italic">codec-example.jar</emphasis>.
	</para>
	</listitem>
	<listitem>
	<para>
	Create a <emphasis role="italic">conf/portal/configuration.xml</emphasis> file within the <emphasis role="italic">codec-example.jar</emphasis> similar to the example below. This allows the portal kernel to find and use the new codec implementation.
	</para>
	<programlisting language="java"><![CDATA[
	<?xml version="1.0" encoding="ISO-8859-1"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_2.xsd http://www.exoplaform.org/xml/ns/kernel_1_2.xsd"
xmlns="http://www.exoplaform.org/xml/ns/kernel_1_2.xsd">

<component>
   <key>org.example.codec.ExampleCodec</key>
   <type>org.example.codec.ExampleCodec</type>
   <init-params>
      <value-param>
         <name>encodingParam</name>
         <value>aaa</value>
      </value-param>
   </init-params>
</component>
</configuration> ]]>
	</programlisting>
	</listitem>
	<listitem>
	<para>
	Deploy the <emphasis role="italic">codec-example.jar</emphasis> into your <emphasis role="italic"><![CDATA[$TOMCAT_HOME/lib/]]></emphasis> directory.	
	</para>
	</listitem>
	<listitem>
	<para>
	Start (or restart) your JBoss Enterprise Portal Platform.
	Any passwords written to the JCR will now be encoded and not plain text.
	</para>
	</listitem>
	</itemizedlist>
</section>